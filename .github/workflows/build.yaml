name: Build

on:
  release:
    types: [ created ]
  push:
    branches: [ "master" ]
    tags: [ "*" ]

jobs:
  build:
    env:
      IMAGE_REGISTRY: registry.digitalocean.com
      IMAGE: fastapi-starter
      TAG: latest

    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: actions-ecosystem/action-regex-match@v2
        id: check-tag
        with:
          # Desired tag format: 0.1.1, 0.1.1-beta, 0.1.1-1
          # Undesired tag format: 0.1.1-beta.sd, 111-beta, latest, v1.1.1, v0.1.1-beta, v0.1.1-1
          text: ${{ env.RELEASE_VERSION }}
          regex: '^(\.?\d+){3}(\-\w+)?$'

      - name: Generate build ID
        if: ${{ steps.check-tag.outputs.match == '' }}
        id: prep
        run: |
          branch=staging
          sha=${GITHUB_SHA::8}
          ts=$(date +%s)
          echo "::set-output name=BUILD_ID::${branch}-${sha}-${ts}"

      - name: Build Staging Image
        if: ${{ steps.check-tag.outputs.match == '' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: dockerfiles/Dockerfile
          push: true
          tags: |
            ${IMAGE_REGISTRY}/${{secrets.DOCKERHUB_USERNAME}}/${{ env.IMAGE }}:${{ steps.prep.outputs.BUILD_ID }}

      - name: Build Production Image
        if: ${{ steps.check-tag.outputs.match != '' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: dockerfiles/Dockerfile
          push: true
          tags: ${IMAGE_REGISTRY}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE }}:${{ env.RELEASE_VERSION }}
