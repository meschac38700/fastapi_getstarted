name: CI
run-name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: ["*"]

jobs:
  tests:
    runs-on: ubuntu-22.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.13"]
        docker-version: ["27.2"]
        docker-channel: ["stable"]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: docker/setup-docker-action@v4
        with:
          docker_version: ${{ matrix.docker-version }}
          docker_channel: ${{ matrix.docker-channel }}

      - name: Prepare test environment
        run: |
          export UV_LINK_MODE=copy
          export PYTHON_VERSION=${{ matrix.python-version }}
          docker compose -f docker-compose.test.ci.yaml up -d

      - name: Run Tests
        run: |
          docker exec -t api_test pytest -m 'not E2E'
          # remove the first
          sed -i "0,/<source>.*<\/source>/{//d;}" src/coverage.xml
          # Fixed source path
          sed -i "s/<source>.*<\/source>/<source>\/home\/runner\/work\/fastapi_getstarted\/fastapi_getstarted\/src<\/source>/g" src/coverage.xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: src/coverage.xml
          retention-days: 1
          overwrite: true
          compression-level: 0

  sonar:
    needs: tests
    runs-on: ubuntu-22.04
    name: SonarQube Analysis
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: src/

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
