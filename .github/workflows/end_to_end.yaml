name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: ["*"]

jobs:
  E2E:
    runs-on: ubuntu-22.04
    env:
      IMAGE: pytest-playwright
      TAG: latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.13"]
        docker-version: ["27.2"]
        docker-channel: ["stable"]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: docker/setup-docker-action@v4
      with:
        docker_version: ${{ matrix.docker-version }}
        docker_channel: ${{ matrix.docker-channel }}

    # Check if dependencies changed
    - name: Check if dependencies changed
      id: deps_changed
      run: |
        git fetch origin ${{ github.event.before }}
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '^(uv.lock|pyproject.toml)$'; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    # Build pytest-playwright image if dependencies changed
    - name: Login to Docker registry
      if: steps.deps_changed.outputs.changed == 'true'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build pytest-playwright image and push
      if: steps.deps_changed.outputs.changed == 'true'
      uses: docker/build-push-action@v6
      with:
        context: .
        file: dockerfiles/playwright.Dockerfile
        push: true
        tags: ${{secrets.DOCKERHUB_USERNAME}}/${{ env.IMAGE }}:${{ env.TAG }}

    - name: Prepare test environment
      run: |
        export UV_LINK_MODE=copy
        export PYTHON_VERSION=${{ matrix.python-version }}
        docker compose -f docker-compose.test.e2e.yaml up -d

    - name: Run E2E Tests
      run: |
        docker exec -t pytest-playwright pytest -m E2E # only run tests with marker E2E
