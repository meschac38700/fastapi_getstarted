services:
  database_dev:
    image: postgres:17-alpine
    container_name: database_dev
    restart: always
    ports:
      - "5433:5432"
    env_file:
      - envs/dev/.env
    volumes:
      - dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 3s
      timeout: 3s
      retries: 5
  redis_dev:
    image: meschac38000/redis-fastapi
    container_name: redis_dev
    restart: always
    env_file:
      - ./envs/dev/.env
    ports:
      - "63790:6379"
    volumes:
      - dev_redis:/data
      - ./redis/redis.conf.example:/usr/local/etc/redis/redis.conf
    privileged: true
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli", "--no-auth-warning", "--pass $$REDIS_PASSWORD", "--raw ping | grep PONG" ]
      interval: 3s
      timeout: 3s
      retries: 5
    command: sh -c "./entrypoint.sh"

  celery_dev:
    container_name: celery_dev
    restart: on-failure
    env_file:
      - ./envs/dev/.env
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile
    command: bash -c "celery -A apps.celery worker -n default@%h -Q default --loglevel=DEBUG"
    network_mode: host
    volumes:
      - ./src/:/home/appuser/app/www

  celery_beat_dev:
    container_name: celery_beat_dev
    restart: on-failure
    env_file:
      - ./envs/dev/.env
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile
    command: bash -c "celery -A apps.celery beat --loglevel=DEBUG"
    network_mode: host
    volumes:
      - ./src/:/home/appuser/app/www
volumes:
  dev_data: {}
  dev_redis: {}
