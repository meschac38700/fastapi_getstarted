services:
  database_test:
    image: postgres:14.8-alpine
    container_name: database_test
    restart: always
    ports:
      - "5434:5432"
    env_file:
      - envs.example/test/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 3s
      timeout: 3s
      retries: 5
  redis_test:
    build:
      context: .
      dockerfile: dockerfiles/redis.Dockerfile
    container_name: redis_test
    restart: always
    env_file:
      - ./envs/test/.env
    ports:
      - "63791:6379"
    volumes:
      - ./redis/redis.conf.example:/usr/local/etc/redis/redis.conf
    privileged: true
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli", "--no-auth-warning", "--pass $$REDIS_PASSWORD", "--raw ping | grep PONG" ]
      interval: 3s
      timeout: 3s
      retries: 5
    command: sh -c "./entrypoint.sh"

  celery_test:
    container_name: celery_test
    restart: on-failure
    env_file:
      - ./envs/test/.env
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile
    command: bash -c "celery -A main.celery worker -n default@%h -Q default --loglevel=DEBUG"
    network_mode: host

  celery_beat_test:
    container_name: celery_beat_test
    restart: on-failure
    env_file:
      - ./envs/test/.env
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile
    command: bash -c "celery -A main.celery beat --loglevel=DEBUG"
    network_mode: host
