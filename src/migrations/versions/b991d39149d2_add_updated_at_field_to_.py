"""Add updated_at field to TimestampedModelMixin

Revision ID: b991d39149d2
Revises: 20286263e186
Create Date: 2025-04-10 12:39:13.854515

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b991d39149d2"
down_revision: Union[str, None] = "20286263e186"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("hero", sa.Column("updated_at", sa.DateTime(), nullable=True))
    op.add_column("jwttoken", sa.Column("updated_at", sa.DateTime(), nullable=True))
    op.add_column("users", sa.Column("updated_at", sa.DateTime(), nullable=True))
    op.drop_index("ix_user_role", table_name="users")
    op.drop_index("ix_user_username", table_name="users")
    op.create_index(op.f("ix_users_role"), "users", ["role"], unique=False)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_role"), table_name="users")
    op.create_index("ix_user_username", "users", ["username"], unique=True)
    op.create_index("ix_user_role", "users", ["role"], unique=False)
    op.drop_column("users", "updated_at")
    op.drop_column("jwttoken", "updated_at")
    op.drop_column("hero", "updated_at")
    # ### end Alembic commands ###
