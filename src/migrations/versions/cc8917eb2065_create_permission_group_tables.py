"""Create permission/Group tables

Revision ID: cc8917eb2065
Revises:
Create Date: 2025-02-02 15:59:41.459673

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "cc8917eb2065"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "permission",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("target_table", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("display_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(
        op.f("ix_permission_target_table"), "permission", ["target_table"], unique=False
    )
    op.create_table(
        "permission_group",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("target_table", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("display_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(
        op.f("ix_permission_group_target_table"),
        "permission_group",
        ["target_table"],
        unique=False,
    )
    op.create_table(
        "permissiongrouplink",
        sa.Column("group_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "permission_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["group_name"], ["permission_group.name"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["permission_name"], ["permission.name"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("group_name", "permission_name"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("permissiongrouplink")
    op.drop_index(
        op.f("ix_permission_group_target_table"), table_name="permission_group"
    )
    op.drop_table("permission_group")
    op.drop_index(op.f("ix_permission_target_table"), table_name="permission")
    op.drop_table("permission")
    # ### end Alembic commands ###
